apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-creds"
spec:
  selector:
    matchLabels:
      app: creds
  template:
    metadata:
      labels:
        app: creds
    spec:
      containers:
        - name: creds
          image: {{ include "storyscript.image" .Values.creds.image }}
          imagePullPolicy: Always
          ports:
            - name: http-internal
              containerPort: 9000
            - name: http-external
              containerPort: 9001
          env:
            - name: GCP_KEYFILE_PATH
              value: "/etc/gcp-secretmanager-key/key.json"
            - name: SELF_DOMAIN
              value: http{{ ternary "s" "" .Values.tls.enabled }}://creds.{{ .Values.domain }}
            - name: SLACK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-creds-config"
                  key: slack_client_id
            - name: SLACK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-creds-config"
                  key: slack_client_secret
            - name: GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-creds-config"
                  key: github_client_id
            - name: GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-creds-config"
                  key: github_client_secret
            - name: ONEGRAPH_APP_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-onegraph-credentials"
                  key: app_id
          volumeMounts:
            - name: gcp-secretmanager-key
              mountPath: "/etc/gcp-secretmanager-key"
      volumes:
        - name: gcp-secretmanager-key
          secret:
            secretName: "{{ .Release.Name }}-gcp-secretmanager-key"
