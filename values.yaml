# Set this to your domain name
# App URLs will be "<app-dns>.{{ .Values.domain }}"
domain: example.com

tls:
  enabled: false
  fullchain:
  privkey:

postgresql:
  create: true
  image:
    repository: postgres
    tag: 9.6.14
  persistence:
    enabled: true
    mountPath: /data
  # dataDir cannot be the mountPath,
  # it has to be a subdirectory
  postgresqlDataDir: /data/pgdata
  # postgresqlHost is only used if create=false
  postgresqlHost:
  postgresqlDatabase: storyscript
  postgresqlUsername: storyscript_superuser
  postgresqlPassword: storyscript_superuser

nginx-ingress:
  rbac:
    create: true
  controller:
    service:
      # only for GKE
      loadBalancerIP:

hello-world:
  # Enabling this creates a new owner, app and release
  # deploying a simple http story at "hello-world.{{ .Values.domain }}"
  enabled: false
  image: storyscript/hello-world

schema:
  image: storyscript/schema:lts

gateway:
  image: storyscript/gateway

graphql:
  image: storyscript/graphql
  # Credentials of the role used by the API server
  postgresqlUsername: storyscript_authenticator
  postgresqlPassword: storyscript_authenticator
  corsWhitelistRegexp: .*

runtime:
  image: storyscript/runtime

synapse:
  image: storyscript/synapse

auth:
  image: storyscript/auth
  jwt:
    secret_key: my-secret-key

  allowlist_token: allowlist-token
  # GitHub app oauth credentials, callback URL set to:
  #  https://auth.{{ .Values.domain }}/callback
  github:
    client_id:
    client_secret:

sls:
  image: storyscript/sls

studio:
  image: storyscript/studio:lts
